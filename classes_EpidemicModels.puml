@startuml
left to right direction
skinparam nodesep 30
skinparam ranksep 25
skinparam classFontSize 10
skinparam classAttributeIconSize 0

class NumericalMethods {
  - result: Any
  --
  + euler_method(model_func=, y0, t, args): None
  + runge_kutta_4(model_func=, y0, t, args): None
}

class EpidemicModels {
  - current_models: List[str]
  - numeric_methods: List[str]
  - axes: List[plt.Axes]
  - canvases: List[FigureCanvasTkAgg]
  - figs: List[plt.Figure]
  --
  + sir_model(y, t, beta, gamma)
  + si_model(y, t, beta)
  + sirs_model(y, t, beta, gamma, delta)
  + seir_model(y, t, beta, sigma, gamma)
  + siqr_model(y, t, beta, gamma, delta, mu)
  + mseir_model(y, t, mu, delta, beta, sigma, gamma)
  + multi_stage_model(y, t, beta, k1, k2, k3, gamma)
  + run_si_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
  + run_sir_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
  + run_sirs_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
  + run_seir_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
  + run_siqr_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
  + run_mseir_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
  + run_m_model(t, params, initials, plot_index, return_solution, method): Optional[dict]
}

class EpidemicApp {
  - root: tk.Tk
  - model: EpidemicModels
  - result_data: Dict[str, pd.DataFrame]
  - country_population: Dict[str, int]
  - model_vars: Dict[str, tk.BooleanVar]
  - method_var: tk.StringVar
  --
  + create_widgets(): None
  + create_models_tab(parent): None
  + create_params_tab(parent): None
  + create_data_tab(parent): None
  + create_graphs(parent): None
  + create_model_params_tab(model_code): None
  + validate_sum(entries_dict, max_sum = 1.0)
  + create_validate_func(min_val, max_val)=
  + set_default_values(): None
  + update_model_selection(): None
  + run_simulation(): None
  + load_csv_data(): None
  + process_csv_data(): None
  + export_results(): None
  + open_model_docs(): None
}

' Связи между классами
NumericalMethods <|-- EpidemicModels : Наследование
EpidemicModels o-- EpidemicApp : Агрегация

@enduml